apply plugin: 'java'
apply plugin: 'war'

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'org.apache.qpid:qpid-client:0.32'
    providedCompile 'org.jboss.spec.javax.ejb:jboss-ejb-api_3.2_spec:1.0.0.Final'
    providedCompile 'org.jboss.spec.javax.jms:jboss-jms-api_2.0_spec:1.0.0.Final'
}


import groovy.xml.MarkupBuilder

task(hello) << {
    println "Will be generate"

    def mb = new MarkupBuilder(new File("index.html").newPrintWriter())

    mb.html() {
	head() {
	    title("This is the title")
	}
	
	body() {
	    div("class" : "main") {
		p("this is the body")
	    }
	}
    }

}

class MyGradlePlugin implements Plugin<Project> {

  void apply(Project project) {
    project.afterEvaluate {
      println "  Project:" + project.name
      
      Configuration conf = project.configurations['compile']
      println "    Configuration: ${conf.name} < ${conf.extendsFrom}"
      // http://gradle.org/docs/current/javadoc/org/gradle/api/artifacts/ResolvedConfiguration.html
      // http://gradle.org/docs/current/javadoc/org/gradle/api/artifacts/ResolvedDependency.html
      Set<ResolvedDependency> allDependencies = conf.resolvedConfiguration.firstLevelModuleDependencies
      for(ResolvedDependency a: allDependencies) {
	println "* id=${a.module.id} file=${a.moduleArtifacts.iterator()[0].file } children=${a.children}"
      }
      
      
    }
  }

}

apply plugin: MyGradlePlugin

task listJars << {
    configurations.runtime.each { File file -> println file.name }
}