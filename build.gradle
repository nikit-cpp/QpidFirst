apply plugin: 'java'
apply plugin: 'war'

buildscript {
    repositories {
        mavenCentral()
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile 'org.apache.qpid:qpid-client:0.32'
    providedCompile 'org.jboss.spec.javax.ejb:jboss-ejb-api_3.2_spec:1.0.0.Final'
    providedCompile 'org.jboss.spec.javax.jms:jboss-jms-api_2.0_spec:1.0.0.Final'
    compile 'com.github.fernandospr:java-mpns:0.0.3'
}

artifacts {
    archives jar
}

import groovy.xml.MarkupBuilder

/*Создаётся и удаляется папка во время clean, кэп*/
class MyGradlePlugin implements Plugin<Project> {

    File buildDir
    File modules

    void apply(Project project) {

        project.afterEvaluate {
            String confName = 'compile'

            println "Project:" + project.name

            buildDir = project.buildDir
            modules = new File(buildDir, 'modules')

            println "WildFly modules will be stored in '" + modules + "'"
            boolean modulesDirCreated = modules.mkdirs()
            println "modules directory created = ${modulesDirCreated}"
            println "modules directory exist = ${modules.exists()}"

            Configuration conf = project.configurations[confName]
            println "    Configuration: ${conf.name} < ${conf.extendsFrom}"
            conf = conf.copy() // remove unnecessary dependencies from super configuration

            // http://gradle.org/docs/current/javadoc/org/gradle/api/artifacts/ResolvedConfiguration.html
            // http://gradle.org/docs/current/javadoc/org/gradle/api/artifacts/ResolvedDependency.html
            Set<ResolvedDependency> allDependencies = conf.resolvedConfiguration.firstLevelModuleDependencies

            processChildDependencies(allDependencies, 0, confName);
        }
    }

    void processChildDependencies(Set<ResolvedDependency> allDependencies, int level, String confName) {
        level++

        for (ResolvedDependency a : allDependencies) {
            Set<ResolvedDependency> childrens = new HashSet<ResolvedDependency>();
            a.children.each {
                if (it.configuration == confName) {
                    childrens.add(it)
                }
            }
            processChildDependencies(childrens, level, confName);

            deploy1(a, level)
        }

    }

    void deploy1(ResolvedDependency a, int level) {
        File jarSrc = a.moduleArtifacts.iterator()[0].file
        String group = a.module.id.group
        String name = a.module.id.name
        String version = a.module.id.version

        println " " + "*"*level + " id=${a.module.id} file=${jarSrc}"

        File jarFolder = /*new File(modules, group + File.separator + name + File.separator + version);*/
                new File("/home/nik/JavaInstruments/wildfly-8.2.0.Final/standalone/deployments/")
        //jarFolder.mkdirs()

        File jarDest = new File(jarFolder, jarSrc.name)
        GFileUtils.copyFile(jarSrc, jarDest)
    }

}

apply plugin: MyGradlePlugin

jar {
    manifest {
        attributes("Dependencies":
                "deployment.qpid-client-0.32.jar, " +
                "deployment.java-mpns-0.0.3.jar, " +
                "deployment.qpid-common-0.32.jar"
        )
    }
}